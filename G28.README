GROUP DETAILS:

1KS18CS065 - P SAIRAM
1KS18CS081 - RAKSHITH KUMAR N


INSTRUCTION TO EXECUTE:

--In the terminal execute as,python3 <name_of_program> -u <url> -p <no_of_parallel_connections>

Example-
python3 G28.py -u http://rprustagi.com/workshops/web/large.htm -p 5

--Once it finishes running, check the current working directory. New file named Output will be added which contains the total content present in the given url will present .



DESCRIPTION OF WORKING OF THE PROGRAM:

--The program takes input 1)url(url) 2)no of parallel connections (conn). 
--The program is mainly divided into 5 subparts(functions)namely.
--1) get_args( ):these function take user input as shown above and returns the user input(usn,conn)to mainfunction.
--2) get_content_len(url):these function takes url as argument and finds the content-length and checks whether the given url accept-ranges in bytes or not of the given url and returns content-       length(content_len) and ("0" or"1")based on whether the url accepts ranges or not.
--3)comp_ranges(content_len,con):these function takes content_len(content-length) and con(no of parallel connections)as argument and divides the content length into ranges based on con(no of parallel connections)and returns ranges as ranges list.
--4)get(con,ranges):this function takes con(no of parallel connections) and ranges as arguments and get the partial content from the url based on start and end values by passing custom headers for get header and writes the content into a output.txt file. 
--5)no_parallel_con(con,values,true):takes con,values(list of ranges),true as arguments and creates parallel processes using multi-processing to find get partial contents from the file.
--The program will get the contents parallely and append the contents into a output file

CHALLENGES OR ISSUES FACED:

--Confused about the approach at first. But we came across it by planning properly. We also split up the whole program to sub tasks and these sub tasks where distributed among us and we were able to slove.
--Before we didnt know about parallel connection. But later, got an idea to use multi-threading or multi-processing.
--we got the ('Received response with content-encoding: gzip, but failed to decode it.', error('Error -3 while decompressing data: incorrect header check') error and finally figured out that we have to pass custom content-encoding header as None.
--we also faced another error and where we are not able to receive partial-contents later in get function we passed stream=True then we were able to get partial contents    
 
RESULT DETAIL AND EXPLANATION:

RESULT:

url: http://rprustagi.com/workshops/web/large.htm        No of parallel connections : 2
The content length of given url is 510369
The computed ranges for given content length 510369 and no of parallel connections 2 is [(0, 255184), (255184, 510369)]
the total content is present in output file


